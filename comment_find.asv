function output = comment_find(string,value_type,com,comtext)

% extracting information from comments exported from LabChart files

% inputs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% string = a string that conveys information within the comments (e.g.'current', 'induction','anodal')

% value_type = type of information being searched for
    % options: 
        %'block' = output is the block number 
        % 'channel' = output is the channel number
        % 'value' = output is the user specified value that follows the
            % search string.  e.g. the brain hemisphere is commented as
            % 'hemi_r_'.  Therefor the output of
            % comment_find('hemi','value',com,comtext) will be 'r'
            % NOTE: this function requires comments and values to be
            % separated by underscores '_'

% com = matrix of comment characteristics generated by LabChart when files
    % are exported as .mat files

% comtext = matrix of comment strings generated by LabChart upon exporting
    % as .mat

% output
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% the function outputs zero if no matches are found for the search string,
% otherwise it outputs the desired value_type (see above)

output = 0;
% loop over comments
for a = 1:size(comtext,1)
    % if string of interest is in the current comment
    if isempty(strfind(comtext(a,:),string)) == 0  
        % check for output value type
        if strcmp(value_type,'block') value_type == 'block'
            output = com(com(:,5)==a,2);
        elseif strcmp(value_type)value_type == 'channel'
            output = com(com(:,5)==a,1);
        elseif value_type == 'value'
            % index of search string
            I1 = strfind(comtext(a,:),string);
            % length of search string
            L = length('string');
            % indices of underscores
            I2 = strfind(comtext(a,:),'_');
            % index of underscore immediaely following search string
            I2 = I2(I2>I1+L);
            % there is only one underscore
            if I2==1
                output = comtext(a,I2:end)
            % if there are multiple underscores
            elseif length(I2)>1
                output = comtext(a,I2(1)+1:I2(2)-1);
            end
        end
    end
end

% convert number string to doubles
if isnan(str2double(output))~=1 % check if string can be converted to number 
    % convert to double
    ouput = str2double(output); 
end
